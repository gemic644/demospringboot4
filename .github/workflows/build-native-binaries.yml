name: Build Native Binaries

on:
  push:
    branches:
      - main

jobs:
  tag-and-release:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.create_tag.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Get latest tag
        id: get_latest_tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "LATEST_TAG=${latest_tag}" >> $GITHUB_OUTPUT
          echo "Latest tag: ${latest_tag}"
      
      - name: Create new tag
        id: create_tag
        run: |
          latest_tag=${{ steps.get_latest_tag.outputs.LATEST_TAG }}
          major=$(echo $latest_tag | cut -d. -f1 | tr -d 'v')
          minor=$(echo $latest_tag | cut -d. -f2)
          patch=$(echo $latest_tag | cut -d. -f3)
          
          # Increment patch version
          new_patch=$((patch + 1))
          new_tag="v${major}.${minor}.${new_patch}"
          
          echo "NEW_TAG=${new_tag}" >> $GITHUB_OUTPUT
          echo "New tag: ${new_tag}"
          
          # Create and push new tag
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a ${new_tag} -m "Release ${new_tag}"
          git push origin ${new_tag}
          
          echo "new_tag=${new_tag}" >> $GITHUB_OUTPUT

  build-linux:
    needs: tag-and-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ needs.tag-and-release.outputs.new_tag }}
      
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
          
      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build with Maven
        run: ./mvnw -B package -Pnative
        
      - name: Rename binary
        run: |
          cd target
          mv demospringboot4 demospringboot4-linux
          
      - name: Upload Linux binary
        uses: actions/upload-artifact@v3
        with:
          name: linux-binary
          path: target/demospringboot4-linux
          
  build-windows:
    needs: tag-and-release
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ needs.tag-and-release.outputs.new_tag }}
      
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
          
      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build with Maven
        run: ./mvnw -B package -Pnative
        
      - name: Rename binary
        run: |
          cd target
          ren demospringboot4.exe demospringboot4-windows.exe
          
      - name: Upload Windows binary
        uses: actions/upload-artifact@v3
        with:
          name: windows-binary
          path: target/demospringboot4-windows.exe
          
  create-release:
    needs: [tag-and-release, build-linux, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux binary
        uses: actions/download-artifact@v3
        with:
          name: linux-binary
          path: ./
          
      - name: Download Windows binary
        uses: actions/download-artifact@v3
        with:
          name: windows-binary
          path: ./
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.tag-and-release.outputs.new_tag }}
          name: Release ${{ needs.tag-and-release.outputs.new_tag }}
          files: |
            demospringboot4-linux
            demospringboot4-windows.exe
          draft: false
          prerelease: false